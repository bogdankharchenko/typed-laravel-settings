name: run-tests

on: [ push, pull_request ]

env:
  ECR_REGISTRY: ''
  AWS_USER: AWS

jobs:

  aws:
    runs-on: self-hosted
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: set env
        run: | 
          - echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          # - echo "AWS_USER=docker_username_${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          # - echo "AWS_PASSWORD=docker_password_${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
      
  test:
    needs: aws
    runs-on: self-hosted
    container:
      image: 244371325961.dkr.ecr.us-east-1.amazonaws.com/php:7.4
      credentials:
       username: ${{ env.AWS_USER }}
       password: ${{ env.AWS_PASSWORD }}

    services:
      redis:
        image: redis
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        os: [ self-hosted ]
        php: [ 7.4 ]
        laravel: [ 8.* ]
        dependency-version: [ prefer-stable ]
        include:
          - laravel: 8.*
            testbench: ^6.23

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install
        run: composer install

      - name: Execute tests
        run: vendor/bin/phpunit
        env:
          REDIS_PORT: 6379
          REDIS_HOST: redis
